diff -urN xf86-video-ati-6.6.193.org/src/radeon_bios.c xf86-video-ati-6.6.193/src/radeon_bios.c
--- xf86-video-ati-6.6.193.org/src/radeon_bios.c	2007-08-04 09:21:28.000000000 +0200
+++ xf86-video-ati-6.6.193/src/radeon_bios.c	2007-11-12 10:27:31.860278536 +0100
@@ -309,7 +309,7 @@
 	        if ((tmp0 = RADEON_BIOS16(tmp + 0x15))) {
 		    if ((tmp1 = RADEON_BIOS8(tmp0+2) & 0x07)) {	    
 			pRADEONEnt->PortInfo[0]->DDCType	= tmp1;      
-			if (pRADEONEnt->PortInfo[0]->DDCType > DDC_LCD) {
+			if (pRADEONEnt->PortInfo[0]->DDCType > DDC_GPIO) {
 			    xf86DrvMsg(pScrn->scrnIndex, X_WARNING,
 				       "Unknown DDCType %d found\n",
 				       pRADEONEnt->PortInfo[0]->DDCType);
diff -urN xf86-video-ati-6.6.193.org/src/radeon_display.c xf86-video-ati-6.6.193/src/radeon_display.c
--- xf86-video-ati-6.6.193.org/src/radeon_display.c	2007-08-04 09:50:23.000000000 +0200
+++ xf86-video-ati-6.6.193/src/radeon_display.c	2007-11-12 10:33:57.056504105 +0100
@@ -75,13 +75,14 @@
   "External"
 };
 
-const char *DDCTypeName[6] = {
+const char *DDCTypeName[7] = {
   "NONE",
   "MONID",
   "DVI_DDC",
   "VGA_DDC",
   "CRT2_DDC",
-  "LCD_DDC"
+  "LCD_DDC",
+  "GPIO_DDC"
 };
 
 const char *DACTypeName[3] = {
@@ -172,6 +173,10 @@
         val = INREG(info->DDCReg+4);
         *Clock = (val & (1<<13)) != 0;
         *data  = (val & (1<<12)) != 0;
+    } else if (info->DDCReg == RADEON_MDGPIO_EN_REG) {
+	val = INREG(info->DDCReg+4);
+	*Clock = (val & (1<<19)) != 0;
+	*data  = (val & (1<<18)) != 0;
     } else {
         val = INREG(info->DDCReg);
         *Clock = (val & RADEON_GPIO_Y_1) != 0;
@@ -191,6 +196,11 @@
         val |= (Clock ? 0:(1<<13));
         val |= (data ? 0:(1<<12));
         OUTREG(info->DDCReg, val);
+    } else if (info->DDCReg == RADEON_MDGPIO_EN_REG) {
+	val = INREG(info->DDCReg) & (CARD32)~((1<<18) | (1<<19));
+	val |= (Clock ? 0:(1<<19));
+	val |= (data ? 0:(1<<18));
+	OUTREG(info->DDCReg, val);
     } else {
         val = INREG(info->DDCReg) & (CARD32)~(RADEON_GPIO_EN_0 | RADEON_GPIO_EN_1);
         val |= (Clock ? 0:RADEON_GPIO_EN_1);
@@ -578,13 +588,16 @@
     case DDC_LCD:
 	info->DDCReg = RADEON_LCD_GPIO_MASK;
 	break;
+    case DDC_GPIO:
+	info->DDCReg = RADEON_MDGPIO_EN_REG;
+	break;
     default:
 	info->DDCReg = DDCReg;
 	return MT_NONE;
     }
 
     /* Read and output monitor info using DDC2 over I2C bus */
-    if (info->pI2CBus && info->ddc2 && (info->DDCReg != RADEON_LCD_GPIO_MASK)) {
+    if (info->pI2CBus && info->ddc2 && (info->DDCReg != RADEON_LCD_GPIO_MASK) && (info->DDCReg != RADEON_MDGPIO_EN_REG)) {
 	OUTREG(info->DDCReg, INREG(info->DDCReg) &
 	       (CARD32)~(RADEON_GPIO_A_0 | RADEON_GPIO_A_1));
 
@@ -638,7 +651,7 @@
 	    usleep(15000);
 	    if(*MonInfo)  break;
 	}
-    } else if (info->pI2CBus && info->ddc2 && info->DDCReg == RADEON_LCD_GPIO_MASK) {
+    } else if (info->pI2CBus && info->ddc2 && ((info->DDCReg == RADEON_LCD_GPIO_MASK) || (info->DDCReg == RADEON_MDGPIO_EN_REG))) {
          *MonInfo = xf86DoEDID_DDC2(pScrn->scrnIndex, info->pI2CBus);
     } else {
 	xf86DrvMsg(pScrn->scrnIndex, X_WARNING, "DDC2/I2C is not properly initialized\n");
diff -urN xf86-video-ati-6.6.193.org/src/radeon_probe.h xf86-video-ati-6.6.193/src/radeon_probe.h
--- xf86-video-ati-6.6.193.org/src/radeon_probe.h	2007-08-04 09:27:06.000000000 +0200
+++ xf86-video-ati-6.6.193/src/radeon_probe.h	2007-11-12 10:34:12.810637385 +0100
@@ -50,6 +50,7 @@
     DDC_VGA,
     DDC_CRT2,
     DDC_LCD,
+    DDC_GPIO,
 } RADEONDDCType;
 
 typedef enum
